{
  "version": 1,
  "title": "Untitled",
  "description": "",
  "programs": [
    {
      "version": 1,
      "name": "Default",
      "vertex": "#version 100\n\nattribute vec3 v_Position;\n\nuniform mat4 modelViewProjection;\n\nuniform struct {\n    int step;\n    float near;\n    float far;\n    float aspect;\n    float fov;\n\n} trans;\n\nvoid main() {\n    gl_Position = modelViewProjection * vec4(v_Position, 1);\n}",
      "fragment": "#version 100\n\nprecision mediump float;\n\nvoid main() {\n    gl_FragColor = vec4(0.5, 0.5, 0.5, 1);\n}",
      "isDefault": true
    }
  ],
  "javascript": "function ui(c) {\n    var ui = c.ui;\n\n    // add left hand side grid\n    ui.add(ui.grid({\n        children: [\n            // theta slider in range [0, pi]\n            ui.label({ value: 'Steps:', title: 'Steps' }),\n            ui.slider({\n                bind: [this.trans, 'step'],\n                min: 0,\n                max: 5\n            }),\n            // phi slider in range [0, 2pi]\n            ui.label({ value: 'fov:', title: 'fov' }),\n            ui.slider({\n                bind: [this.trans, 'fov'],\n                min: 0.0,\n                max: 2.0 * Math.PI\n            })\n        ]\n    }), { left: 10, bottom: 6 });\n\n    // add right hand side grid\n    ui.add(ui.grid({\n        children: [\n            // line thickness slider in range [0, 0.1]\n            ui.label({ value: 'far:', title: 'Outer Contour Thickness' }),\n            ui.slider({\n                bind: [this.trans, 'far'],\n                min: 0.1,\n                max: 10.0\n            }),\n            // discretization steps slider in range [2, 10]\n            // this yields a float so we have to floor it in order to yield an integer later\n            ui.label({ value: 'aspect:', title: 'Number of discretization steps' }),\n            ui.slider({\n                bind: [this.trans, 'aspect'],\n                min: 0.1,\n                max: 10.0\n            })\n        ]\n    }), { right: 10, bottom: 6 });\n}\n\nfunction init(c) {\n    this.box = new c.models.Box(c, 1, 1, 1);\n\n    var M= c.math.mat4.create();\n\n\n\n    this.trans = { step: 5, near: 1, far: 3, aspect:1.5, fov: Math.PI/4 }\n    ui.call(this, c);\n    var tang = Math.tan((this.fov * 0.5) * Math.PI / 180.0);\n\n// Height and width values of near plane\n    var height = this.near * tang;\n    var width = height*this.aspect ;\n\nvar t = height; // Calculate t\nvar b = -height; // Calculate b\nvar r = width; // Calculate r\nvar l = -width; // t: left = -top * ratio = bottom * ratio\n    var f= this.far;\n    var n = this.near;\n    if(this.trans.step >0){\n\n        var M_1 = c.math.mat4(\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, -1,\n        0, 0, 0, 1\n    );\n        c.math.mat4.multiply(M, M, M_1);\n    }\n    if(this.trans.step >1){\n\n        var M_2 = c.math.mat4(\n            2/(r-l), 0, 0, 0,\n        0, 2/(t-b), 0, 0,\n            0, 0, 2*f/((f-n)*n), 0,\n        0, 0, 0, 1\n    );\n        c.math.mat4.multiply(M, M, M_2);\n    }\n    if(this.trans.step >2){\n\n        var M_3 = c.math.mat4(\n            1, 0, 0, 0,\n        0, 1, 0, 0,\n            0, 0, 1, 0,\n        0, 0, 1/n, 1\n    );\n        c.math.mat4.multiply(M, M, M_3);\n    }\n    if(this.trans.step >3){\n\n        var M_4 = c.math.mat4(\n            1, 0, 0, 0,\n        0, 1, 0, 0,\n            0, 0, 1, -n,\n        0, 0, 0, 1\n    );\n        c.math.mat4.multiply(M, M, M_4);\n    }\n    if(this.trans.step >4){\n\n        var M_5 = c.math.mat4(\n            1, 0, 0, 0,\n        0, 1, 0, 0,\n            0, 0, -1, 0,\n        0, 0, 0, 1\n    );\n        c.math.mat4.multiply(M, M, M_5);\n    }\n    c.view = M;\n\n\n}\n\nfunction render(c) {\n    c.view(this.view);\n\n\n    this.box.render(c);\n}",
  "creationTime": "2018-05-27T12:52:54.907Z",
  "authors": []
}